---
- name: Create a pod for CA
  containers.podman.podman_pod:
    name: "{{ cfssl_pod_name }}"
    state: started
    publish:
      - "{{ cfssl_api_port }}:{{ cfssl_api_port }}"

- name: Get cfssl image stats if it exists
  containers.podman.podman_image_info:
    name: "{{ cfssl_image_name }}"
  register: cfssl_image_info

- name: Ensure cfssl image exists
  containers.podman.podman_image:
    name: "{{ cfssl_image_link }}"
    tag: "{{ cfssl_image_version }}"
  when: cfssl_image_info.images|length == 0

- name: Ensure cfssl_html volume exists
  containers.podman.podman_volume:
    name: cfssl_html_volume

- name: Ensure cfssl_conf volume exists
  containers.podman.podman_volume:
    name: cfssl_conf_volume
  register: cfssl_conf_volume_info

- name: Ensure cfssl_ca volume exists
  containers.podman.podman_volume:
    name: cfssl_ca_volume
  register: cfssl_ca_volume_info

- name: Write cfssl configuration file to volume if it has changed
  template:
    src: config.json.j2
    dest: "{{ cfssl_conf_mountpoint }}/cfssl.conf"
  vars:
    cfssl_conf_mountpoint: "{{ cfssl_conf_volume_info.volume.Mountpoint }}"
  register: cfssl_conf_update_result

- name: Copy user's local CA files to cfssl_ca volume
  synchronize:
    src: "{{ user_ca_directory }}/"
    dest: "{{ cfssl_ca_mountpoint }}"
  vars:
    cfssl_ca_mountpoint: "{{ cfssl_ca_volume_info.volume.Mountpoint }}"

- name: Check if cfssl container exists
  containers.podman.podman_container_info:
    name: "{{ cfssl_container_name }}"
  register: cfssl_container_info

- name: Deploy cfssl container
  containers.podman.podman_container:
    name: "{{ cfssl_container_name }}"
    image: "{{ cfssl_image_name }}"
    pod: "{{ cfssl_pod_name }}"
    state: started
    command: "serve -address=0.0.0.0 -port={{ cfssl_api_port }} -ca-key {{ ca_key_path }} -ca {{ ca_cert_path }} -config /etc/cfssl/conf.d/cfssl.conf"
    labels:
      app: "{{ cfssl_app_label }}"
    volumes:
      - cfssl_html_volume:/usr/share/cfssl/html
      - cfssl_conf_volume:/etc/cfssl/conf.d
      - cfssl_ca_volume:/etc/cfssl
  # when: cfssl_container_info.containers|length == 0 or cfssl_conf_update_result.changed
