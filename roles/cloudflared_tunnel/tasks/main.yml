---
- name: Ensure cloudflared directory exists
  file:
    path: "{{ cloudflared_config_directory }}"
    state: directory
    mode: '0755'

- name: Fetch active user environ before reloading i3
  include_role:
    name: korbad.tools.get_active_user_environ

- name: Run cloudflared tunnel login
  command: cloudflared tunnel login
  args:
    creates: "{{ cloudflared_config_directory }}/cert.pem"
  environment:
    DISPLAY: "{{ active_user_environ_dict.DISPLAY }}"

- name: Check for existing tunnel
  include_tasks: check_for_existing_tunnel.yml

- name: Create tunnel if not exists
  command: cloudflared tunnel create {{ cloudflared_tunnel_name }}
  when: cloudflare_tunnel_uuid is undefined or cloudflare_tunnel_uuid|length == 0
  register: cloudflared_tunnel_create

- name: Check for existing tunnel
  include_tasks: check_for_existing_tunnel.yml
  when: cloudflared_tunnel_create is not skipped

- name: Ensure cloudflared config file is templated
  include_tasks: configuration_file.yml

# - name: Ensure the tunnel is running
#   include_tasks: run.yml

- name: Ensure DNS routing is set up
  include_tasks: dns_routing.yml

- name: Ensure cloudflared service exists
  include_tasks: service.yml

- name: Get AUD TAG
  include_tasks: get_aud.yml